# 내 채팅 애플리케이션의 점수 표시 방식을 두 가지 변경하려고 해.
# 1. 채팅이 진행되는 동안에는 현재 스트레스 점수를 화면에 표시하지 않도록 수정.
# 2. 대화가 완전히 종료된 후 나타나는 최종 결과 화면에서는 종합 점수와 함께 각 '카테고리별 세부 점수'도 함께 보여주도록 수정.

# 가정:
# - 백엔드(`main.py`)는 이미 최종 응답 시 `data.scores` 객체 안에 `overall_score`와 `category_scores_display` (또는 유사한 이름의 카테고리별 점수 객체)를 포함하여 보내주고 있다고 가정.
# - `category_scores_display`는 {"카테고리명1": 점수1, "카테고리명2": 점수2, ...} 형태의 객체라고 가정 (예: {"감정적 반응": 3.5, "업무/학업 부담": 4.0}).
# - HTML에는 채팅 중 점수를 표시하던 `div` (ID: `score-display`), 최종 결과 섹션 `div` (ID: `results-section`), 그리고 그 안에 최종 종합 점수를 표시하는 요소 (ID: `final-score-value`)가 있다고 가정.

# === 1. 채팅 중 현재 스트레스 점수 숨기기 (JavaScript 수정) ===

# `Workspace` API 응답을 처리하는 `.then(data => { ... })` 블록 내부를 수정해줘:
# a. `data.conversation_end === false` 일 때 (즉, 대화가 계속 진행 중일 때) `score-display` ID를 가진 요소의 `textContent`를 업데이트하던 기존 코드를 **찾아서 삭제하거나 주석 처리**해줘.
#    (또는, `score-display` 요소 자체를 CSS에서 `display: none;`으로 기본 설정하고, 이 업데이트 코드를 삭제해도 좋아. AI가 더 적절한 방식을 선택해줘.)
# b. 결과적으로, 대화가 진행되는 동안에는 현재 점수가 화면에 보이지 않아야 해.

# === 2. 최종 결과 화면에 카테고리별 점수 표시 (HTML 및 JavaScript 수정) ===

# **HTML 수정 (`templates/index.html`):**
#   a. `results-section` (ID를 가진 결과 표시용 `div`) 내부를 수정해줘.
#   b. 기존에 최종 종합 점수를 표시하는 요소 (ID: `final-score-value`) 아래에, 카테고리별 점수들을 표시할 새로운 `div`를 추가하고, 이 `div`의 ID는 `category-scores-details`로 설정해줘.
#      예시:
#      ```html
#      <div id="results-section" style="display: none;">
#          <h2>최종 스트레스 점수</h2>
#          <p id="final-score-value" style="font-size: 3em; font-weight: bold;"></p>
#          #          <div id="category-scores-details" style="margin-top: 20px;">
#              <h3>카테고리별 세부 점수:</h3>
#              #          </div>
#          <p>본 점수는 참고용이며 의학적 진단을 대체할 수 없습니다.</p>
#          <button id="try-again-button">처음부터 다시 시작하기</button>
#      </div>
#      ```

# **JavaScript 수정 (fetch 응답 처리 블록, `if (data.conversation_end === true)` 내부):**
#   a. `results-section`을 보여주고 `final-score-value`에 종합 점수를 표시하는 기존 로직 **다음에** 다음 로직을 추가해줘:
#   b. `categoryScoresDetailsElement = document.getElementById('category-scores-details');` 로 새로 추가한 div 요소를 가져와줘.
#   c. `categoryScoresDetailsElement.innerHTML = '<h3>카테고리별 세부 점수:</h3>';` 와 같이 기존 내용을 초기화하고 제목을 다시 설정해줘. (중복 방지 및 제목 유지)
#   d. 백엔드에서 받은 `data.scores.category_scores_display` 객체를 순회하면서 (예: `for...in` 루프 또는 `Object.entries().forEach()`) 각 카테고리와 점수를 표시해줘.
#      - 각 카테고리명과 점수를 `<p>${카테고리명}: ${점수.toFixed(1)} / 5.0점</p>` (5점 만점 기준 예시, 실제 만점 기준은 다를 수 있음) 또는 `<li>` 형태로 만들어 `categoryScoresDetailsElement`에 추가(append)해줘.
#      - 점수는 소수점 첫째 자리까지 표시 (`.toFixed(1)`) 하는 것이 좋아.

# 위 지시사항을 바탕으로 `templates/index.html`과 관련 JavaScript 코드를 수정해줘.
# 수정된 부분과 그 이유를 간략히 설명해주면 좋겠어.