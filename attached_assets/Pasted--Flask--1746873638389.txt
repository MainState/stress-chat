# 내 Flask 채팅 애플리케이션에 사용자가 채팅을 시작하기 전에 보게 될 '시작 안내 화면'을 새로 만들고 싶어.
# 이 화면에는 프로그램의 목적, 스트레스 측정 방법 및 그 근거에 대한 설명, 그리고 '채팅 시작하기' 버튼이 포함되어야 해.
# 이 버튼을 클릭하면 안내 화면은 사라지고 기존의 채팅 화면이 나타나도록 해줘.

# === 0. 시작 안내 화면 텍스트 내용 (AI가 이 내용을 바탕으로 문장을 다듬거나 그대로 사용해도 좋아) ===

#   a. **프로그램 제목 (예시):** "AI 대화형 스트레스 자가 성찰 도우미" (또는 현재 프로젝트 제목)
#   b. **이 프로그램의 목적:**
#      - "본 프로그램은 사용자가 AI 챗봇과의 편안한 대화를 통해 최근 자신의 스트레스 수준을 스스로 돌아보고 성찰할 수 있도록 돕기 위해 개발되었습니다."
#      - "약 20턴의 짧은 대화를 통해 현재 느끼는 감정, 일상에서의 경험, 신체적 반응 등을 탐색합니다."
#      - "**주의:** 이 프로그램은 재미 또는 참고용이며, 의학적 진단이나 전문적인 심리 상담을 대체할 수 없습니다. 심각한 스트레스나 정신 건강 문제가 의심될 경우 반드시 전문가와 상담하세요."
#   c. **스트레스 측정 방법:**
#      - "챗봇과의 대화에서 사용자가 사용하는 단어와 표현을 분석하여 스트레스 수준을 추정합니다."
#      - "시스템은 다양한 스트레스 관련 카테고리(예: 정서적 어려움, 업무/학업 부담, 대인 관계, 신체 증상 등)에 해당하는 키워드들의 출현 빈도와 미리 정의된 가중치를 종합적으로 고려합니다."
#      - "대화가 종료되면, 분석된 내용을 바탕으로 1.0점에서 10.0점 사이의 종합적인 스트레스 추정 점수를 제공합니다."
#   d. **측정 방법의 과학적 근거 (간략히):**
#      - "본 측정 방식은 '사람의 언어 사용이 심리 상태를 반영한다'는 심리언어학 및 내용 분석 연구 원리에 기반합니다."
#      - "특히, 심리학 연구에서 널리 사용되는 LIWC(Linguistic Inquiry and Word Count)와 같이, 텍스트 내 특정 단어 카테고리의 빈도를 통해 심리 상태를 추론하는 전문적인 방법론의 핵심 아이디어를 참고하여, 본 프로젝트의 목적에 맞게 단순화하고 응용하였습니다."

# === 1. HTML 구조 추가 (`templates/index.html` 파일) ===

# a. 기존의 채팅 관련 메인 컨테이너(예: `<div id="app-container">` 또는 `<body>` 바로 아래) 안에,
#    **새로운 `div`를 최상단에 추가**하고 ID는 `welcome-section`으로 설정해줘. 이 div는 기본적으로 화면에 보여야 해.
# b. `welcome-section` div 내부에 위 '0. 시작 안내 화면 텍스트 내용'의 a, b, c, d 항목을 각각 제목(예: `<h2>` 또는 `<h3>`)과 문단 (`<p>`) 태그를 사용하여 보기 좋게 넣어줘.
#    - 특히 "주의" 문구는 눈에 잘 띄도록 강조(예: `<strong>` 또는 별도 스타일)해주면 좋겠어.
# c. `welcome-section` div 가장 아래에 '채팅 시작하기' 버튼을 추가해줘. ID는 `start-chat-button`으로 설정해줘.
#    - 예시: `<button id="start-chat-button" class="btn">채팅 시작하기</button>` (기존 버튼 스타일이 있다면 .btn 클래스 활용)

# d. 기존의 채팅 화면 전체를 감싸는 `div`(ID: `chat-section`)와 결과 화면 전체를 감싸는 `div`(ID: `results-section`)는 **초기에는 화면에 보이지 않도록** 인라인 스타일 `style="display: none;"`을 추가하거나, CSS에서 기본값을 `display: none;`으로 설정해줘.

# === 2. CSS 스타일 추가 (`static/style.css` 파일) ===

# a. `#welcome-section`에 대한 스타일을 추가해줘:
#    - 적절한 안쪽 여백(padding), 텍스트 정렬(예: `text-align: left;` 또는 `justify`), 최대 너비 등을 설정해서 가독성을 높여줘.
#    - 섹션 제목(`h2`, `h3` 등)과 본문(`p`)의 폰트 크기, 색상, 줄 간격 등을 조절해줘.
#    - `#start-chat-button` 버튼이 섹션 하단 중앙이나 적절한 위치에 오도록 스타일링 해주고, 다른 버튼들과 일관성 있는 디자인을 유지하되 좀 더 중요해 보이도록 강조해도 좋아.
# b. `#chat-section`과 `#results-section`이 `display: none;`으로 기본 설정되도록 CSS에 추가해줘 (만약 HTML 인라인으로 하지 않았다면).

# === 3. JavaScript 로직 추가/수정 (HTML 파일 내 `<script>` 태그 또는 `static/script.js` 파일) ===

# a. 스크립트 시작 부분에서 새로 추가된 HTML 요소들에 대한 참조 변수를 만들어줘:
#    `const welcomeSection = document.getElementById('welcome-section');`
#    `const startChatButton = document.getElementById('start-chat-button');`
#    (`chatSection`과 `resultsSection` 변수는 이미 있다고 가정, 없다면 추가)

# b. **페이지 로드 시 초기 화면 설정:**
#    - 스크립트가 실행될 때 (페이지 로드 시), `welcomeSection`은 보이도록(`style.display = 'block';` 또는 기본값 유지) 하고,
#    - `chatSection`과 `resultsSection`은 보이지 않도록(`style.display = 'none';`) 확실히 설정해줘.

# c. **`start-chat-button` 클릭 이벤트 리스너 추가:**
#    - 이 버튼을 클릭하면 다음 작업이 수행되도록 해줘:
#      i.  `welcomeSection.style.display = 'none';` // 시작 안내 화면 숨기기
#      ii. `chatSection.style.display = 'block';` // 채팅 화면 보여주기
#      iii. 채팅 입력창(`userInput`)에 자동으로 포커스가 가도록 `userInput.focus();`를 호출해줘.
#      iv. (중요) **백엔드 세션 초기화:** 사용자가 '채팅 시작하기'를 누르는 시점이 새 대화의 시작이므로, 필요하다면 백엔드의 `/` (홈) 라우트가 호출되어 세션 변수들(`turn_count`, `user_messages`, `chat_history` 등)이 초기화되도록 해야 해. 가장 간단한 방법은 `startChatButton` 클릭 시 `window.location.href = '/';` 로 페이지를 루트로 보내서 Flask의 `/` 라우트가 세션을 정리하고 `index.html`을 다시 렌더링하게 하는 것일 수 있어. 또는, `/reset_chat_session` 같은 AJAX 요청을 백엔드에 보내서 세션을 초기화하고, 성공 응답을 받으면 화면을 전환하는 방법도 있어. (AI가 판단하여 더 적절하거나 간단한 방식을 제안하거나, `window.location.href = '/';` 방식을 사용하도록 지시해도 좋아. 만약 현재 `/` 라우트가 이미 `index.html`을 렌더링하고 세션 초기화를 한다면, `startChatButton`은 단순히 화면 전환만 담당해도 될 수 있어. 이 경우, 사용자가 페이지에 처음 접속했을 때 세션이 초기화된다는 가정이 필요함.)
#         **우선은 간단하게, 버튼 클릭 시 JavaScript로 화면 전환만 하고, 세션 초기화는 사용자가 페이지에 처음 접속했을 때 Flask의 `/` 라우트에서 이미 처리된다고 가정하고 진행해줘.** (만약 이 가정이 틀리면 나중에 수정 요청할게)

# d. "다시 시작하기" 버튼 (`try-again-button` - 결과 화면 내)을 클릭했을 때:
#    - `resultsSection.style.display = 'none';` // 결과 화면 숨기기
#    - `welcomeSection.style.display = 'block';` // 시작 안내 화면 다시 보여주기
#    - (마찬가지로, 이 때도 백엔드 세션 초기화가 필요함. `window.location.href = '/';` 를 호출하여 페이지를 루트로 보내 세션을 초기화하고 시작 화면을 보여주는 것이 가장 간단한 방법일 수 있어. 아니면 위 c-iv와 동일한 방식으로 처리.)
#    - **일단은 `window.location.href = '/';` 를 호출하는 것으로 수정해줘.** 이렇게 하면 홈 라우트에서 세션이 초기화되고 다시 시작 안내 화면이 나올 거야.

# 위 지시사항을 바탕으로 `templates/index.html`, `static/style.css`, 그리고 관련 JavaScript 코드를 수정/생성해주고, 각 파일별 주요 변경 사항을 알려줘.