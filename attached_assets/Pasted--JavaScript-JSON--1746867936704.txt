# 내 채팅 애플리케이션의 프론트엔드 JavaScript 코드에 버그가 있어.
# 백엔드에서 카테고리별 점수를 포함한 새로운 JSON 구조로 응답을 보내주기 시작한 후부터,
# 최종 결과 화면에 스트레스 점수가 제대로 표시되지 않고 `[object Object]`로 나오고, 카테고리별 점수도 표시되지 않으며 오류가 발생해.
# 이 문제를 해결하기 위해 `index.html` 내 `<script>` 태그 또는 연결된 `static/script.js` 파일의 `Workspace` 응답 처리 로직을 수정해줘.

# 가정:
# - 백엔드는 이제 응답 JSON의 `scores` 키 안에 `overall_score` (숫자)와 `category_scores_display` (객체)를 포함하여 보내준다고 가정.
#   (예: `data.scores.overall_score`, `data.scores.category_scores_display`)
# - HTML에는 최종 종합 점수를 표시할 요소(ID: `final-score-value`)와 카테고리별 점수를 표시할 `div`(ID: `category-scores-details`)가 이미 준비되어 있다고 가정.
# - (참고) 채팅 중에는 점수를 표시하지 않기로 했으므로, `score-display` 관련 로직은 대화 종료 시점 외에는 실행되지 않아야 함.

# === JavaScript `Workspace` 응답 처리 `.then(data => { ... })` 블록 수정 요청 ===

# 1. **데이터 구조 확인을 위한 로그 추가:**
#    - `.then(data => { ... })` 블록 **가장 첫 줄**에 `console.log("Frontend: Received data from backend:", data);` 로그를 추가해서 백엔드로부터 받은 데이터 전체 구조를 명확히 확인할 수 있도록 해줘.

# 2. **최종 결과 화면 (`if (data.conversation_end === true)` 블록 내부) 점수 표시 수정:**
#    a. **종합 점수 표시 수정:**
#       - `finalScoreValueElement` (ID: `final-score-value`)의 `textContent`를 설정하는 부분을 찾아줘.
#       - 이 부분에서 점수 값을 가져올 때, 이전의 `data.stress_score` 대신 **`data.scores.overall_score`**를 사용하도록 수정해줘.
#       - 점수는 소수점 첫째 자리까지 표시되도록 `.toFixed(1)`을 적용해줘.
#         (예: `finalScoreValueElement.textContent = data.scores.overall_score.toFixed(1) + "점";`)

#    b. **카테고리별 점수 표시 로직 수정/확인:**
#       - `categoryScoresDetailsElement` (ID: `category-scores-details`)에 카테고리별 점수를 표시하는 로직을 다시 한번 점검하고, 필요하면 아래 로직으로 수정/보강해줘:
#         i.  먼저 `categoryScoresDetailsElement.innerHTML = '<h3>카테고리별 세부 점수:</h3>';` 와 같이 기존 내용을 초기화하고 제목을 설정해줘.
#         ii. `data.scores.category_scores_display` 객체가 존재하는지 확인한 후, 이 객체를 순회하면서 (예: `for (const categoryName in data.scores.category_scores_display)` 또는 `Object.entries().forEach()`) 각 카테고리명과 점수를 가져와줘.
#         iii.각 카테고리에 대해 새로운 `<p>` 요소를 만들고, 텍스트 내용은 예를 들어 `\`${categoryName}: ${data.scores.category_scores_display[categoryName].toFixed(1)} / 5.0점\`` (5점 만점 기준 예시) 과 같이 설정해줘.
#         iv. 생성된 `<p>` 요소를 `categoryScoresDetailsElement`에 추가(append)해줘.
#         v.  만약 `data.scores.category_scores_display` 객체가 없거나 비어있다면, "카테고리별 점수 정보가 없습니다." 같은 메시지를 표시하도록 예외 처리해줘도 좋아.

# 3. **채팅 중 점수 표시 로직 제거 확인:**
#    - `if (data.conversation_end === false)` 블록 (즉, 대화가 계속 진행 중일 때) 내부에서는 `score-display` ID를 가진 요소의 내용을 업데이트하는 코드가 **없어야 해.** (이전에 숨기기로 했으므로) 이 부분이 확실히 제거되었는지 다시 한번 확인해줘.

# 위 수정 사항들을 적용하여, 백엔드가 보내주는 새로운 `scores` 객체 구조에 맞게 프론트엔드에서 점수를 정확히 읽어오고 표시하도록 해줘.
# 특히 `data.scores.overall_score`와 `data.scores.category_scores_display`를 올바르게 참조하는 것이 중요해.